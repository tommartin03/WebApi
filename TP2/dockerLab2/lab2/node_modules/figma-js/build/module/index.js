var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
export * from './figmaTypes';
import axios from 'axios';
export var Client = function (opts) {
    var headers = opts.accessToken
        ? {
            Authorization: "Bearer ".concat(opts.accessToken),
        }
        : {
            'X-Figma-Token': opts.personalAccessToken,
        };
    var client = axios.create({
        baseURL: "https://".concat(opts.apiRoot || 'api.figma.com', "/v1/"),
        headers: headers,
    });
    return {
        client: client,
        file: function (fileId, params) {
            if (params === void 0) { params = {}; }
            return client.get("files/".concat(fileId), {
                params: __assign(__assign({}, params), { ids: params.ids ? params.ids.join(',') : '' }),
            });
        },
        fileVersions: function (fileId) { return client.get("files/".concat(fileId, "/versions")); },
        fileNodes: function (fileId, params) {
            return client.get("files/".concat(fileId, "/nodes"), {
                params: __assign(__assign({}, params), { ids: params.ids.join(',') }),
            });
        },
        fileImages: function (fileId, params) {
            return client.get("images/".concat(fileId), {
                params: __assign(__assign({}, params), { ids: params.ids.join(',') }),
            });
        },
        fileImageFills: function (fileId) { return client.get("files/".concat(fileId, "/images")); },
        comments: function (fileId) { return client.get("files/".concat(fileId, "/comments")); },
        postComment: function (fileId, params) {
            return client.post("files/".concat(fileId, "/comments"), params);
        },
        deleteComment: function (fileId, commentId) {
            return client.delete("files/".concat(fileId, "/comments/").concat(commentId));
        },
        me: function () { return client.get("me"); },
        teamProjects: function (teamId) { return client.get("teams/".concat(teamId, "/projects")); },
        projectFiles: function (projectId) { return client.get("projects/".concat(projectId, "/files")); },
        teamComponents: function (teamId, params) {
            if (params === void 0) { params = {}; }
            return client.get("teams/".concat(teamId, "/components"), { params: params });
        },
        fileComponents: function (fileId) { return client.get("files/".concat(fileId, "/components")); },
        component: function (key) { return client.get("components/".concat(key)); },
        teamComponentSets: function (teamId, params) {
            if (params === void 0) { params = {}; }
            return client.get("teams/".concat(teamId, "/component_sets"), { params: params });
        },
        fileComponentSets: function (fileId) { return client.get("files/".concat(fileId, "/component_sets")); },
        componentSet: function (key) { return client.get("component_set/".concat(key)); },
        teamStyles: function (teamId, params) {
            if (params === void 0) { params = {}; }
            return client.get("teams/".concat(teamId, "/styles"), { params: params });
        },
        fileStyles: function (fileId) { return client.get("files/".concat(fileId, "/styles")); },
        style: function (key) { return client.get("styles/".concat(key)); },
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFQSxjQUFjLGNBQWMsQ0FBQztBQUM3QixPQUFPLEtBQXNDLE1BQU0sT0FBTyxDQUFDO0FBeVUzRCxNQUFNLENBQUMsSUFBTSxNQUFNLEdBQUcsVUFBQyxJQUFtQjtJQUN4QyxJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsV0FBVztRQUM5QixDQUFDLENBQUM7WUFDRSxhQUFhLEVBQUUsaUJBQVUsSUFBSSxDQUFDLFdBQVcsQ0FBRTtTQUM1QztRQUNILENBQUMsQ0FBQztZQUNFLGVBQWUsRUFBRSxJQUFJLENBQUMsbUJBQW1CO1NBQzFDLENBQUM7SUFFTixJQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQzFCLE9BQU8sRUFBRSxrQkFBVyxJQUFJLENBQUMsT0FBTyxJQUFJLGVBQWUsU0FBTTtRQUN6RCxPQUFPLFNBQUE7S0FDUixDQUFDLENBQUM7SUFFSCxPQUFPO1FBQ0wsTUFBTSxRQUFBO1FBRU4sSUFBSSxFQUFFLFVBQUMsTUFBTSxFQUFFLE1BQVc7WUFBWCx1QkFBQSxFQUFBLFdBQVc7WUFDeEIsT0FBQSxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFTLE1BQU0sQ0FBRSxFQUFFO2dCQUM1QixNQUFNLHdCQUNELE1BQU0sS0FDVCxHQUFHLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FDNUM7YUFDRixDQUFDO1FBTEYsQ0FLRTtRQUVKLFlBQVksRUFBRSxVQUFDLE1BQU0sSUFBSyxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQVMsTUFBTSxjQUFXLENBQUMsRUFBdEMsQ0FBc0M7UUFFaEUsU0FBUyxFQUFFLFVBQUMsTUFBTSxFQUFFLE1BQU07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